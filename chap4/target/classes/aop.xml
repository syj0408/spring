<?xml version="1.0" encoding="UTF-8"?>
<!-- src/main/java/aop.xml  => 중간에 끼어 드는 것-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/context
             http://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/aop
             http://www.springframework.org/schema/aop/spring-aop.xsd">
  <bean id="write" class="spring.WriteImpl">
  	<constructor-arg><ref bean="articleDao" /></constructor-arg>
  </bean>           
  
  <bean id="articleDao" class="spring.MariadbArticleDao" />
  <!-- AOP 설정 -->
  <!-- AspectJ 클래스를 객체화 -->
  <bean id="logging" class="spring.LoggingAspect" />
  <!-- 
  	 aop 관련 용어
  
  	 	1.pointcut : aop 대상이 되는 메서드 설정. 핵심 로직지정
  	 	   execution(public * Spring.*Impl.*(..))
  	 	 	 public : 메서드의 접근제어자 지정
  	 	  		*   : return타입 상관 없음
  	 	  	 Spring.*Impl : Spring 패키지 내부의 클래스 중 이름이 impl로 끝나는 클래스
  	 	  	 *(..)  : 메서드이름 상관없음, 매개변수 상관없음.
  	 	  	 
  	    2.aspect : AOP로 사용될 객체 설정
  	      ref = "logging" => 객체의 이름
  	      
  	    3.advice : AOP가 실행될 시점 지정
  	    	around : 이전 과 이후 
  	    	before : 이전
  	    	after : 이후
  	    	afterReturning : 정상 종료 이후
  	    	afterThrowing  : 예외 종료 이후  	 
   -->
   
  <aop:config> <!-- aop 설정 -->
  <!-- pointcut : 핵심로직 지정: 스프링패키지에 속한 클래스 중 이름이 Impl로 끝나는 클래스의 public 메서드. : 리턴타입 상관없음. 매개변수 상관없음
    /execution=핵심로직이 실행 될 때  메서드 접근제어자:public spring 클래스들 중에 이름이 Impl로 끝나느 클래스  -->
  	<aop:pointcut expression="execution(public * Spring.*Impl.*(..))" id="servicepointcut"/>
  	<!-- aspect : AOP로 사용될 객체와 pointcut 지정 -->
  	<aop:aspect id="loggingAspect" ref="logging"> <!-- aop:aspect aop클래스 지정 -->
  	<!-- advice 지정 
  		aop:around : 핵심로직의 시작과 끝에 실행됨.
  	-->
  		<aop:around method="logging" pointcut-ref="servicepointcut"/>
  	</aop:aspect>
  </aop:config>
</beans>